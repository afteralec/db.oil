name: "Migrate Production DB"
on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/*"
      - "migrations/*"
jobs:
    lint:
      runs-on: ubuntu-latest
      services:
        mysql:
          image: mysql:8
          env:
            MYSQL_DATABASE: test
            MYSQL_ROOT_PASSWORD: pass
          ports:
            - 3306:3306
          options: >-
            --health-cmd "mysqladmin ping"
            --health-interval 10s
            --health-start-period 10s
            --health-timeout 5s
            --health-retries 10
      steps:
        - name: Setup Atlas
          uses: ariga/setup-atlas@v0
        - name: Checkout
          uses: actions/checkout@v4
        - name: Lint Migrations
          run: |
            atlas migrate lint --dev-url \
              "mysql://root:pass@127.0.0.1/test" \
              --git-base main
    createdb:
      needs: lint
      outputs:
        db_url: ${{ steps.encrypt_db_url.outputs.db_url }}
      runs-on: ubuntu-latest
      steps:
      - name: Create branch
        uses: planetscale/create-branch-action@v4
        id: create_branch
        with:
          org_name: oil
          database_name: well
          branch_name: cd
          from: main
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
          PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
      - name: Create password
        uses: planetscale/create-branch-password-action@v3
        id: create_password
        with:
          org_name: oil
          database_name: well
          branch_name: cd
          name: cd-migrate
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
          PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
      - name: Build Database URL
        id: build_db_url
        shell: bash
        run: |
          echo "db_url=mysql://$DB_USERNAME:$DB_PW@$DB_HOST/well?tls=true" >> $GITHUB_OUTPUT
        env:
          DB_USERNAME: ${{ steps.create_password.outputs.username }}
          DB_PW: ${{ steps.create_password.outputs.password }}
          DB_HOST: ${{ steps.create_password.outputs.hostname }}
      - name: Encrypt Database URL
        id: encrypt_db_url
        shell: bash
        run: |
          echo "db_url=$(gpg --symmetric --batch --passphrase "$SECRET" --output - <(echo "$DB_URL") | base64 -w0)" >> $GITHUB_OUTPUT
        env:
          SECRET: secret
          DB_URL: ${{ steps.build_db_url.outputs.db_url }}
    echo-db-url:
      runs-on: ubuntu-latest
      needs: createdb
      steps:
        - name: Decrypt Database URL
          id: decrypt_db_url
          shell: bash
          run: |
            echo "$(gpg --decrypt --batch --passphrase "$SECRET" --output - <(echo "$DB_URL" | base64 --decode))"
            echo "db_url=$(gpg --decrypt --quiet --batch --passphrase "$SECRET" --output - <(echo "$DB_URL" | base64 --decode))" >> $GITHUB_OUTPUT
          env:
            SECRET: secret
            DB_URL: ${{ needs.createdb.outputs.db_url }}
        - name: Echo Database URL
          run: echo "${{ steps.decrypt_db_url.outputs.db_url }}"
      # - name: Setup Atlas
        # uses: ariga/setup-atlas@v0
      # - name: Checkout
        # uses: actions/checkout@v4
      # - name: Apply Migrations
        # run: |
          # atlas migrate apply -u "mysql://${{ steps.create_password.outputs.username }}:${{ steps.create_password.outputs.password }}@${{ steps.create_password.outputs.hostname }}/well?tls=true"
